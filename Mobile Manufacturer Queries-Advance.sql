--SQL Advance Case Study


--Q1--BEGIN 

 SELECT  DISTINCT [STATE] FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_LOCATION AS B ON A.IDLocation =B.IDLocation 
WHERE TotalPrice >0 AND
Date BETWEEN (SELECT TOP 1 Date FROM FACT_TRANSACTIONS WHERE YEAR(DATE)='2005' ORDER BY Date) AND GETDATE();

--Q1--END

--Q2--BEGIN

SELECT TOP 1 [STATE], SUM(Quantity) AS BUY_SAMSUNG FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel LEFT JOIN DIM_MANUFACTURER AS C ON B.IDManufacturer= C.IDManufacturer
LEFT JOIN DIM_LOCATION AS D ON A.IDLocation =D.IDLocation
WHERE Country='US' AND Manufacturer_Name='SAMSUNG'
GROUP BY [State]
ORDER BY BUY_SAMSUNG DESC;

--Q2--END

--Q3--BEGIN      

SELECT State, ZipCode, Model_Name, COUNT(TotalPrice) AS TRANS_COUNT FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel LEFT JOIN DIM_LOCATION AS C ON A.IDLocation =C.IDLocation 	
GROUP BY Model_Name,ZipCode, State
ORDER BY State,ZipCode;

--Q3--END

--Q4--BEGIN

SELECT TOP 1 B.Manufacturer_Name,A.Model_Name,A.Unit_price FROM DIM_MODEL AS A LEFT JOIN DIM_MANUFACTURER AS B ON A.IDManufacturer=B.IDManufacturer
ORDER BY Unit_price;

--Q4--END

--Q5--BEGIN

SELECT C.Manufacturer_Name,B.Model_Name, AVG(b.Unit_price) AS AVG_PRICE FROM  DIM_MODEL AS B LEFT JOIN DIM_MANUFACTURER AS C ON B.IDManufacturer=C.IDManufacturer 
WHERE Manufacturer_Name IN 
						(SELECT TOP 5 C.Manufacturer_Name
						 FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel LEFT JOIN DIM_MANUFACTURER AS C ON B.IDManufacturer=C.IDManufacturer 
						 GROUP BY Manufacturer_Name
						 ORDER BY SUM(Quantity) DESC)
GROUP BY Manufacturer_Name,Model_Name
ORDER BY AVG_PRICE DESC;

--Q5--END

--Q6--BEGIN

SELECT Customer_Name, AVG(TotalPrice) AS AVG_PRICE FROM FACT_TRANSACTIONS AS A INNER JOIN DIM_CUSTOMER AS B ON A.IDCustomer =B.IDCustomer 
WHERE YEAR(DATE)='2009'
GROUP BY Customer_Name
HAVING AVG(TotalPrice)>500;

--Q6--END
	
--Q7--BEGIN 

SELECT Model_Name FROM (SELECT Model_Name, SUM(Quantity) AS MODEL_QUANTITY, RANK() OVER (ORDER BY SUM(Quantity)DESC) AS RANKS FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel
               WHERE YEAR(Date)='2008'
               GROUP BY Model_Name) AS X
WHERE RANKS BETWEEN 1 AND 5
INTERSECT	
SELECT Model_Name FROM (SELECT Model_Name, SUM(Quantity) AS MODEL_QUANTITY,RANK() OVER (ORDER BY SUM(Quantity)DESC) AS RANKS FROM FACT_TRANSACTIONS  AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel
			   WHERE YEAR(Date)='2009'
			   GROUP BY Model_Name) AS Y
WHERE RANKS BETWEEN 1 AND 5
INTERSECT
SELECT Model_Name FROM (SELECT Model_Name, SUM(Quantity) AS MODEL_QUANTITY,RANK() OVER (ORDER BY SUM(Quantity)DESC) AS RANKS FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel
			   WHERE YEAR(Date)='2010'
			   GROUP BY Model_Name) AS Z
WHERE RANKS BETWEEN 1 AND 5;

--Q7--END	
--Q8--BEGIN

SELECT YEARS, Manufacturer_Name, SALES FROM 
		(	SELECT YEAR(Date) AS YEARS, Manufacturer_Name, SUM(TotalPrice) AS SALES, RANK() OVER (PARTITION BY YEAR(DATE) ORDER BY SUM(TOTALPRICE) DESC) AS RANKS
			FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel LEFT JOIN DIM_MANUFACTURER AS C ON B.IDManufacturer=C.IDManufacturer 
			WHERE YEAR(Date) IN ('2009','2010')
			GROUP BY YEAR(Date), Manufacturer_Name) AS X
WHERE RANKS=2;


--Q8--END
--Q9--BEGIN

SELECT * FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel LEFT JOIN DIM_MANUFACTURER AS C ON B.IDManufacturer=C.IDManufacturer 

SELECT Manufacturer_Name FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel LEFT JOIN DIM_MANUFACTURER AS C ON B.IDManufacturer=C.IDManufacturer 
WHERE YEAR(DATE)='2010'
EXCEPT
SELECT Manufacturer_Name FROM FACT_TRANSACTIONS AS A LEFT JOIN DIM_MODEL AS B ON A.IDModel =B.IDModel LEFT JOIN DIM_MANUFACTURER AS C ON B.IDManufacturer=C.IDManufacturer 
WHERE YEAR(DATE)='2009';

--Q9--END

--Q10--BEGIN

WITH DEMO_TABLE AS
       (SELECT Customer_Name,YEAR(Date) AS [YEAR], AVG(TotalPrice) AS AVG_PRICE, AVG(QUANTITY) AS AVG_QUANTITY,
		ROW_NUMBER() OVER (PARTITION BY YEAR(DATE) ORDER BY AVG(TOTALPRICE) DESC) AS RANKS
		FROM DIM_CUSTOMER AS A INNER JOIN FACT_TRANSACTIONS AS B ON A.IDCustomer=B.IDCustomer
		GROUP BY YEAR(DATE), Customer_Name),
FINAL_TABLE AS
       (SELECT Customer_Name,YEAR,AVG_PRICE,AVG_QUANTITY,
		LAG(AVG_PRICE,1) OVER (PARTITION BY CUSTOMER_NAME ORDER BY YEAR) AS PREV_AMT, 
		(AVG_PRICE-LAG(AVG_PRICE,1) OVER (PARTITION BY CUSTOMER_NAME ORDER BY YEAR))/LAG(AVG_PRICE,1) OVER (PARTITION BY CUSTOMER_NAME ORDER BY YEAR)*100 AS PERCENTAGE_CHANGE
		FROM DEMO_TABLE
		WHERE RANKS BETWEEN 1 AND 10)

SELECT CUSTOMER_NAME,YEAR,AVG_PRICE,AVG_QUANTITY,PERCENTAGE_CHANGE FROM FINAL_TABLE

--Q10--END
